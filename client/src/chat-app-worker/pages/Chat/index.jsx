import React, { useEffect, useRef, useState, useContext } from "react";
import "./styles/main.css";
import EmojiPicker from 'emoji-picker-react';

import EmojiTray from "./components/EmojiTray";
import ChatInput from "./components/ChatInput";
import Header from "./components/Header";
import ChatSidebar from "./components/ChatSidebar";
import Icon from "./../../components/Icon";
import Search from "./components/Search";
import Profile from "./components/Profile";
import Convo from "./components/Convo";
import { useUsersContext } from "./../../../chat-app-new/context/usersContext";
import { AccountContext } from './../../../chat-app-new/context/AccountProvider';
import { uploadFile } from "src/http/workerAPI";
import { newRMessage } from "src/http/renthubAPI";
import { newCountWMessage, getCountMessage } from "src/http/adminAPI";
import { $host } from './../../../http/index'
import sendSound from './../../../chat-app-new/assets/sounds/sendmessage.mp3';
import axios from 'axios';
import ChatSidebarProfile from "./components/ChatSidebarProfile";

import { 
	CButton,
	CModal,
	CModalHeader,
	CModalTitle,
	CModalBody,
	CModalFooter
  } from '@coreui/react'
import { sendMessageToTelegram, sendPhotoToTelegram, sendDocumentFormToTelegram } from "src/http/telegramAPI";

const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID
const token_work = process.env.REACT_APP_TELEGRAM_API_TOKEN_RENTHUB
const host = process.env.REACT_APP_HOST
const baseURL = process.env.REACT_APP_API_URL
const webAppAnketa = process.env.REACT_APP_WEBAPP_ANKETA
const webAppUrl = process.env.REACT_APP_WEBAPP_URL;

const Chat = () => {
	const { userRenthub, addNewMessage, conversations, workersAll } = useUsersContext();
	const { personW } = useContext(AccountContext);
	const { setCountMessage } = useUsersContext();

	const chatId = personW.id;
	let user = userRenthub.find((user) => user.chatId === chatId?.toString());
	let convs = conversations.find((conv) => conv.members[0] === chatId?.toString());

	const lastMsgRef = useRef(null);
	const [showAttach, setShowAttach] = useState(false);
	const [showEmojis, setShowEmojis] = useState(false);
	const [showProfileSidebar, setShowProfileSidebar] = useState(false);
	const [showSearchSidebar, setShowSearchSidebar] = useState(false);
	const [file, setFile] = useState();
	const [image, setImage]= useState("");
	const [mess, setMess] = useState("");
	const [fileType, setFileType] = useState("");
	const [showPicker, setShowPicker] = useState(false)
	const [chosenEmoji, setChosenEmoji] = useState('');
	const [pathFile, setPathFile] = useState("");
	const [originalName, setOriginalName] = useState("");

	const [clearFile, setClearFile] = useState(false)
	const [showCloseButton, setShowCloseButton] = useState(false)
	const [showErrorFile, setShowErrorFile] = useState(false);

	//select
    const [selectedElement, setSelectedElement] = useState("")
	const [scenari, setScenari] = useState("")

	// –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–µ–∫–µ–Ω–¥–∞
	const [data, getFile] = useState({ name: "", path: "" });
	const [progress, setProgess] = useState(0); // progessbar
  	const el = useRef(); // –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω–ø—É—Ç—É

	const audio = new Audio(sendSound);

	const [poster, setPoster] = useState("")

	const refreshPage = ()=>{
		window.location.reload(true);
	 }

	useEffect(() => {
		//console.log("personW: ", personW.id)
		if (user) {
			console.log("personW: ", personW.id)

			//setUserAsUnread(user.chatId);
			setCountMessage(0)
			//–æ–±–Ω—É–ª–∏—Ç—å –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
			//const kol_mess = getCountMessage()
			//newCountWMessage(kol_mess - 1)

			setTimeout(()=> {
				scrollToLastMsg();
			}, 1000)
		}
	}, [user]);

	useEffect(() => {
		user && scrollToLastMsg();
	}, [userRenthub]);

	useEffect(() => {
		//setTimeout(()=> {
			console.log("lastMsgRef: ", lastMsgRef.current)
		//}, 3000)
		
		//lastMsgRef.current = lastMsgRef.current + 1
		//scrollToLastMsg();
	}, [lastMsgRef.current]);

	useEffect(() => {
		console.log(selectedElement)
		setSelectedElement(selectedElement);
		setScenari(selectedElement)

		let text = ''

		//–ü—Ä–∏–≤–µ—Ç—Å—Ç–∏–≤–µ
		if (selectedElement === 1) {
			text = 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ¬ª'
			console.log(text)
			setMess(text)
		}

		//–î–æ—Ä–æ–≥–∏–µ –∫–æ–ª–ª–µ–≥–∏
		else if (selectedElement === 2) {
			text = 'üîµ C—Ü–µ–Ω–∞—Ä–∏–π ¬´–î–æ—Ä–æ–≥–∏–µ –∫–æ–ª–ª–µ–≥–∏¬ª'
			setMess(text)
		}

		//–ù–æ–≤–æ—Å—Ç–∏
		else if (selectedElement === 3) {
			text = 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–ù–æ–≤–æ—Å—Ç–∏¬ª'
			setMess(text)
		}

		//–°–ø–∏—Å–æ–∫ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
		else if (selectedElement === 4) {
			text = 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–°–ø–∏—Å–æ–∫ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª'
			console.log(text)
			setMess(text)
		}

		//–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ1
		else if (selectedElement === 5) {
			text = 'üîµ C—Ü–µ–Ω–∞—Ä–∏–π ¬´–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ1¬ª'
			setMess(text)
		}

		//–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ2
		else if (selectedElement === 6) {
			text = 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ2¬ª'
			setMess(text)
		}
		
		//–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
		else if (selectedElement === '0') {
			text = `${user.name.split(' ')[1]}, —è —é–Ω—ã–π —á–∞—Ç-–±–æ—Ç –∏ –µ—â–µ –Ω–µ –≤—Å—ë —É–º–µ—é. –õ—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ–º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä: +7 (499) 500-14-11`
			setMess(text)
		}
		//–ü–∞—Å–ø–æ—Ä—Ç
		else if (selectedElement === '1') {
			text = "–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞..."
			setMess(text)
		}
		//–ö–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º
		else if (selectedElement === '2') {
			text = `+7 (499) 500-14-11 - –ú–µ–Ω–µ–¥–∂–µ—Ä U.L.E.Y`
			setMess(text)
		}
		//–ó–∞–ø–∞—Å
		else if (selectedElement === '3') {
			text = `${user.name.split(' ')[1]}, –º—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –í–∞—Å –≤ –∑–∞–ø–∞—Å –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç. –ó–∞–ø–∞—Å –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è.
			–°—É–º–º—É –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É—Ç–æ—á–Ω–∏—Ç—å —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –° –±–æ–ª—å—à–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –í—ã –±—É–¥–µ—Ç–µ –Ω–∞ –Ω—ë–º –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω—ã, 
			–Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Å–æ—Å—Ç–∞–≤–æ–º –∏ –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º –≤—ã–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É. –ì–æ—Ç–æ–≤—ã?`
			
			setMess(text)
		}
		//–û—Ñ–∏—Å U.L.E.Y
		else if (selectedElement === '4') {
			text = `–û—Ñ–∏—Å | U.L.E.Y

			–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –î–µ—Ä–±–µ–Ω–µ–≤—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è, –¥. 7, —Å—Ç—Ä. 2
					
			–ö–∞—Ä—Ç–∞: https://goo.gl/maps/uFrAfV5NmE2rUXsT8`

			setMess(text)
		}
		//–û–ø–ª–∞—Ç–∞ / —Å–º–µ—Ç–∞
		else if (selectedElement === '5') {
			text = `–î–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã: 
			https://t.me/ULEY_Office_Bot`

			setMess(text)
		}
		//–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞
		else if (selectedElement === '6') {
			text = `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${user.name.split(' ')[1]}. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ —ç—Ç—É –∑–∞—è–≤–∫—É. 
			–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤ —É–∂–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω.
			–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö!`

			setMess(text)
		}
		//–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞
		else if (selectedElement === '7') {
			text = `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${user.name.split(' ')[1]}. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –∑–∞—è–≤–∫—É. 
			–î–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Ç–µ—Ö. –∑–∞–¥–∞—á–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É:
			+7 (499) 500-14-11`

			setMess(text)
		}
		//–ó–∞–ø—Ä–æ—Å –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
		else if (selectedElement === '8') {
			text = `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${user.name.split(' ')[1]}. –í—ã –≤–ø–µ—Ä–≤—ã–µ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –∑–∞—è–≤–∫—É –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ U.L.E.Y
			–ß—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –í–∞–º —Ä–∞–±–æ—Ç—É –Ω–∞ —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ:
					
			‚úÖ –§–ò–û
					
			‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏
					
			‚úÖ –ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è
					
			‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å`

			setMess(text)
		}

		//–ü—Ä–∞–≤–∏–ª–∞
		else if (selectedElement === '9') {
			text = '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è "–ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç"...'

			setMess(text)
		}

		//–ü–æ—Å—Ç–µ—Ä
		else if (selectedElement === '10') {
			setPoster('https://proj.uley.team/upload/2024-05-21T06:26:45.939Z.jpg')

			text = 'https://proj.uley.team/upload/2024-05-21T06:26:45.939Z.jpg'

			setMess(text)
		}

	}, [selectedElement]);

	//–ø—Ä–æ–∫—Ä—É—Ç–∫–∞
	const scrollToLastMsg = () => {
		//console.log("–ü—Ä–æ–∫—Ä—É—Ç–∫–∞: ", lastMsgRef.current)
		lastMsgRef.current?.scrollIntoView({transition: "smooth"});
	};

	useEffect(() => {
        const getImage = async () => {
            if (file) {
                const data = new FormData();
                data.append("name", file.name); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
                data.append("photo", file); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞

               let response = await uploadFile(data);
			   console.log("response: ", response)

			//    axios.post(baseURL + 'api/file/upload', data, {
			// 		onUploadProgress: (ProgressEvent) => {
			// 			let progress = Math.round(
			// 			ProgressEvent.loaded / ProgressEvent.total * 100
			// 			) + '%';
			// 			setProgess(progress);
			// 		}
			// 	}).then(res => {
			// 	console.log(res);
			// 	getFile({
			// 		name: res.data.name,
			// 		path: baseURL + res.data.path
			// 	})
			// 	}).catch(err => console.log(err))

               setImage(response.data.path.split('.team')[1]);
			   //—Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ñ–∞–π–ª
			   setMess(host + response.data.path.split('.team')[1])

			   setPathFile(response.data.path)
			   setOriginalName(response.data.originalname)
            }
        }
        getImage();
    }, [file])

	const onFileChange = (e, key) => {	
		setProgess(0)
		const file = e.target.files[0]; // –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É
		console.log("key: ", key);
		setFileType(key)
		console.log(file);
		setFile(file); // —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
		setShowAttach(false)
    }

	const openSidebar = (cb) => {
		// close any open sidebar first
		setShowProfileSidebar(false);
		setShowSearchSidebar(false);

		setShowCloseButton(true)

		// call callback fn
		cb(true);
	};

	const closeSidebar = (cb) => {
		// close any open sidebar first
		setShowProfileSidebar(false);

		setShowCloseButton(false)

		// call callback fn
		cb(false);
	};

	//—Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
	const sendText = async () => {
		console.log("selectedElement: ", selectedElement)

		let temp=mess.replace(/\n/g, '%0A'); //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
			temp = temp.replace(/#/g, '%23'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ—Ç–∫–∏
			temp = temp.replace(/&/g, '%26'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ &
			temp = temp.replace(/\+/g, '%2b'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ +
			temp = temp.replace(/>/g, '%3e'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ >
			temp = temp.replace(/</g, '%3c'); 

		if (selectedElement === 1) { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement, temp)
			//setSelectedElement(1)

			//let sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			const message = {
				senderId: chatAdminId, 
				receiverId: personW.id,
				conversationId: convs.id,
				type: "text",
				text: 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ¬ª',
				isBot: null,
				messageId: null,
			}
				
			// console.log("message send: ", message);
		
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			await newRMessage(message)
		
			//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
			addNewMessage(personW.id, 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ¬ª', 'text', '', convs.id, null, null);
				
			sendScenariy1()

		} else if (selectedElement === 2) { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement, temp)
			//setSelectedElement(1)

			//let sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			const message = {
				senderId: chatAdminId, 
				receiverId: personW.id,
				conversationId: convs.id,
				type: "text",
				text: 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–î–æ—Ä–æ–≥–∏–µ –∫–æ–ª–ª–µ–≥–∏¬ª',
				isBot: null,
				messageId: null,
			}
		
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			await newRMessage(message)
		
			//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
			addNewMessage(personW.id, 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–î–æ—Ä–æ–≥–∏–µ –∫–æ–ª–ª–µ–≥–∏¬ª', 'text', '', convs.id, null, null);
				
			sendScenariy2()

		} else if (selectedElement === 3 || temp === '–ù–æ–≤–æ—Å—Ç–∏' || temp === '–Ω–æ–≤–æ—Å—Ç–∏') { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement, temp)
			//setSelectedElement(1)

			//let sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			const message = {
				senderId: chatAdminId, 
				receiverId: personW.id,
				conversationId: convs.id,
				type: "text",
				text: 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–ù–æ–≤–æ—Å—Ç–∏¬ª',
				isBot: null,
				messageId: null,
			}
				
			// console.log("message send: ", message);
		
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			await newRMessage(message)
		
			//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
			addNewMessage(personW.id, 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–ù–æ–≤–æ—Å—Ç–∏¬ª', 'text', '', convs.id, null, null);
				
			sendScenariy3()

		} else if (selectedElement === 4 || temp === '–ü–∞—Å–ø–æ—Ä—Ç' || temp === '–ø–∞—Å–ø–æ—Ä—Ç') { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement, temp)
			//setSelectedElement(1)

			//let sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			const message = {
				senderId: chatAdminId, 
				receiverId: personW.id,
				conversationId: convs.id,
				type: "text",
				text: 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–°–ø–∏—Å–æ–∫ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª',
				isBot: null,
				messageId: null,
			}
				
			// console.log("message send: ", message);
		
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			await newRMessage(message)
		
			//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
			addNewMessage(personW.id, 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–°–ø–∏—Å–æ–∫ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª', 'text', '', convs.id, null, null);
				
			sendScenariy4()

		} else if (selectedElement === 5 || temp === '–†–µ–∫–≤–∏–∑–∏—Ç—ã1' || temp === '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã1') { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement, temp)
			//setSelectedElement(1)

			//let sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			const message = {
				senderId: chatAdminId, 
				receiverId: personW.id,
				conversationId: convs.id,
				type: "text",
				text: 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ1¬ª',
				isBot: null,
				messageId: null,
			}
				
			// console.log("message send: ", message);
		
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			await newRMessage(message)
		
			//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
			addNewMessage(personW.id, 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ1¬ª', 'text', '', convs.id, null, null);
				
			sendScenariy5()

		} else if (selectedElement === 6 || temp === '–†–µ–∫–≤–∏–∑–∏—Ç—ã2' || temp === '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã2') { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement, temp)
			//setSelectedElement(1)

			//let sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			const message = {
				senderId: chatAdminId, 
				receiverId: personW.id,
				conversationId: convs.id,
				type: "text",
				text: 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ2¬ª',
				isBot: null,
				messageId: null,
			}
				
			// console.log("message send: ", message);
		
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			await newRMessage(message)
		
			//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
			addNewMessage(personW.id, 'üîµ –°—Ü–µ–Ω–∞—Ä–∏–π ¬´–†–µ–∫–≤–∏–∑–∏—Ç—ã ‚Ññ2¬ª', 'text', '', convs.id, null, null);
				
			sendScenariy6()
		
		}
		else if (selectedElement === '1') { //–≤—ã–±—Ä–∞–Ω –ø–∞—Å–ø–æ—Ä—Ç
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement)
			sendMyMessage()

		} else if (selectedElement === '9') { //–≤—ã–±—Ä–∞–Ω –ü—Ä–∞–≤–∏–ª–∞
				//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
				console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement)
				sendMyMessage2()

		} else if (selectedElement === '10') { //–≤—ã–±—Ä–∞–Ω –ü–æ—Å—Ç–µ—Ä
			console.log("–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è: ", selectedElement)
			sendMyMessagePoster()
	
		} else {
			//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

			//–ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
			let temp=mess.replace(/\n/g, '%0A'); //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
			temp = temp.replace(/#/g, '%23'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ—Ç–∫–∏
			temp = temp.replace(/&/g, '%26'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ &
			temp = temp.replace(/\+/g, '%2b'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ +
			temp = temp.replace(/>/g, '%3e'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ >
			temp = temp.replace(/</g, '%3c'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ <
			
			let sendToTelegram

			// const url_send_msg = `https://api.telegram.org/bot${token_work}/sendMessage?chat_id=${personW.id}&parse_mode=html&text=${temp}`
			// const sendToTelegram = await $host.get(url_send_msg);

			if(!file) {
				// const url_send_msg = `https://api.telegram.org/bot${token_work}/sendMessage?chat_id=${personW.id}&parse_mode=html&text=${temp}`				
				// sendToTelegram = await $host.get(url_send_msg);
				sendToTelegram = await sendMessageToTelegram({user: personW.id, text: temp})
			} else {
				if (fileType === 'doc') { //(image.slice(-3) === 'gif' || image.slice(-3)==='zip') {
					// if (image.slice(-3) === 'ocx' || image.slice(-3)==='doc' || image.slice(-3)==='lsx' || image.slice(-3)==='xls' || image.slice(-3)==='iff' || image.slice(-3)==='IFF') {
					// 	const url_send_doc = `https://api.telegram.org/bot${token_work}/sendMessage?chat_id=${personW.id}&parse_mode=html&text=${host+image}`
					// 	//console.log("url_send_doc: ", url_send_doc)
					// 	sendPhotoToTelegram = await $host.get(url_send_doc);
					// } else if (image.slice(-3) === 'png' || image.slice(-3)==='jpg' || image.slice(-3)==='peg' || image.slice(-3) !== 'PNG' || image.slice(-3)!=='JPG' || image.slice(-3)!=='PEG') {
					// 	setShowErrorFile(true)
					// } else if (image.slice(-3) === 'pdf' ) {
					// 	const url_send_doc = `https://api.telegram.org/bot${token_work}/sendDocument?chat_id=${personW.id}&document=${host+image}`
					// 	//console.log("url_send_doc: ", url_send_doc)
					// 	sendPhotoToTelegram = await $host.get(url_send_doc);
					// } else {
						// const url_send_doc = `https://api.telegram.org/bot${token_work}/sendDocument?chat_id=${personW.id}&document=${host+image}`
						// //console.log("url_send_doc: ", url_send_doc)
						// //sendPhotoToTelegram = await $host.get(url_send_doc);
						const form = new FormData();
						form.append("chat_id", personW.id); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
						form.append("document", file); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
						//const form = new FormData();
						sendToTelegram = await $host.post(`https://api.telegram.org/bot${token_work}/sendDocument`, form, {headers: { 'Content-Type': 'multipart/form-data' },})
					//}		

					//sendToTelegram = await sendDocumentFormToTelegram({chatId: personW.id, path: pathFile, filename:originalName})
				} else if (fileType === 'image') {
					// if (image.slice(-3) !== 'png' || image.slice(-3)!=='jpg' || image.slice(-3)!=='peg' || image.slice(-3) !== 'PNG' || image.slice(-3)!=='JPG' || image.slice(-3)!=='PEG') {
					// 	setShowErrorFile(true)
					// } else {
						const url_send_photo = `https://api.telegram.org/bot${token_work}/sendPhoto?chat_id=${personW.id}&photo=${host+image}`
						sendToTelegram = await $host.get(url_send_photo);
						//sendToTelegram = await sendPhotoToTelegram({user: personW.id, image: host+image})
					//}		
				}	
			}

			//–í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
			if (sendToTelegram) {
				console.log('–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ', sendToTelegram.data.result.message_id);
			}           
			//–ê –∑–¥–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
			else {
				console.log('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
			}

			let message = {};
			if(!file) {
				console.log("text")
				message = {
					senderId: chatAdminId, 
					receiverId: user.chatId,
					conversationId: convs.id,
					type: "text",
					text: mess,
					isBot: null,
					messageId: sendToTelegram.data.result.message_id,
				}

				//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
				await newRMessage(message)	

				//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
				addNewMessage(user.chatId, mess, 'text', '', convs.id, sendToTelegram.data.result.message_id, null);
			} else {
				console.log("image")
				message = {
					senderId: chatAdminId, 
					receiverId: user.chatId,
					conversationId: convs.id,
					type: "image",
					text: host + image,
					isBot: null,
					messageId: sendToTelegram.data.result.message_id,
				}

				//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
				await newRMessage(message)	

				//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
				addNewMessage(user.chatId, host + image, 'image', '', convs.id, sendToTelegram.data.result.message_id, null);
			}
			console.log("message send: ", message);

			
		}
	}

	const submitNewMessage = () => {
		audio.play();
		sendText();

		setMess("");
		scrollToLastMsg();
		setFile("");
        setImage("");
		setSelectedElement('')
	};


	//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
	const sendScenariy1 = async() => {
		console.log("send scenariy1")
		//audio.play();

		//let client = userWorkers.find((client) => client.chatId === user.chatId);

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "–ü–æ–µ—Ö–∞–ª–∏", web_app: {url: webAppUrl}},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		
		//–ü—Ä–∞–≤–∏–ª–∞
		if (selectedElement === 1) {
			//send photo
			let poster1 = 'https://proj.uley.team/upload/posters/hello_renthub.jpg' //poster 1

			let arr = [poster1]

			arr.map(async(item, index)=> {
				setTimeout(async()=> {
					await sendPhotoToTelegram({user: user.chatId, photo: item, keyboard: keyboard})
				}, 500 * ++index)
			})			
		} 
    }

	const sendScenariy2 = async() => {
		console.log("send scenariy2")
		//audio.play();

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		
		//–ü—Ä–∞–≤–∏–ª–∞
		if (selectedElement === 2) {
			//send photo
			let poster1 = 'https://proj.uley.team/upload/posters/kollegi.jpg' //poster 1

			let arr = [poster1]

			arr.map(async(item, index)=> {
				setTimeout(async()=> {
					await sendPhotoToTelegram({user: user.chatId, photo: item, keyboard: ''})
				}, 500 * ++index)
			})			
		} 
    }

	const sendScenariy3 = async() => {
		console.log("send scenariy3")
		//audio.play();

		//let client = userWorkers.find((client) => client.chatId === user.chatId);

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "VK", url:'https://vk.com/uley.team'},
                    {"text": "Telegram", url:'https://t.me/uley_team'},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		
		//–ü—Ä–∞–≤–∏–ª–∞
		if (selectedElement === 3 || mess === '–ù–æ–≤–æ—Å—Ç–∏' || mess === '–Ω–æ–≤–æ—Å—Ç–∏') {
			//send photo
			let poster1 = 'https://proj.uley.team/upload/posters/3/news.jpg' //poster 1

			let arr = [poster1]

			arr.map(async(item, index)=> {
				setTimeout(async()=> {
					await sendPhotoToTelegram({user: user.chatId, photo: item, keyboard: keyboard})

					// setTimeout(async()=> {
                    //     await delMessageToTelegram({user: user.chatId, messageId: sendToTelegram?.data.result.message_id}) 
                    // }, 1200000) //20 –º–∏–Ω.
				}, 500 * ++index)
			})			
		} 
    }

	const sendScenariy4 = async() => {
		console.log("send scenariy4")
		//audio.play();

		//let client = userWorkers.find((client) => client.chatId === user.chatId);

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "XLSX", url:'https://ya.ru'},
                    {"text": "PDF", url:'https://ya.ru'},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		
		//–ü—Ä–∞–≤–∏–ª–∞
		if (selectedElement === 4 || mess === '–ü–∞—Å–ø–æ—Ä—Ç' || mess === '–ø–∞—Å–ø–æ—Ä—Ç') {
			//send photo
			let poster1 = 'https://proj.uley.team/upload/posters/akred.jpg' //poster 1

			let arr = [poster1]

			arr.map(async(item, index)=> {
				setTimeout(async()=> {
					await sendPhotoToTelegram({user: user.chatId, photo: item, keyboard: keyboard})

					// setTimeout(async()=> {
                    //     await delMessageToTelegram({user: user.chatId, messageId: sendToTelegram?.data.result.message_id}) 
                    // }, 1200000) //20 –º–∏–Ω.
				}, 500 * ++index)
			})			
		} 
    }

	const sendScenariy5 = async() => {
		console.log("send scenariy5")
		//audio.play();

		//let client = userWorkers.find((client) => client.chatId === user.chatId);

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "–û—Ç–∫—Ä—ã—Ç—å", url:'https://uley.team/property'},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		
		//–ü—Ä–∞–≤–∏–ª–∞
		if (selectedElement === 5 || mess === '–†–µ–∫–≤–∏–∑–∏—Ç—ã1' || mess === '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã1') {
			//send photo
			let poster1 = 'https://proj.uley.team/upload/posters/rekviz_beznal.jpg' //poster 1

			let arr = [poster1]

			arr.map(async(item, index)=> {
				setTimeout(async()=> {
					await sendPhotoToTelegram({user: user.chatId, photo: item, keyboard: keyboard})

					// setTimeout(async()=> {
                    //     await delMessageToTelegram({user: user.chatId, messageId: sendToTelegram?.data.result.message_id}) 
                    // }, 1200000) //20 –º–∏–Ω.
				}, 500 * ++index)
			})			
		} 
    }

	const sendScenariy6 = async() => {
		console.log("send scenariy6")
		//audio.play();

		//let client = userWorkers.find((client) => client.chatId === user.chatId);

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä", copy_text: {text: '+7(905)793-51-49'}},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		
		//–ü—Ä–∞–≤–∏–ª–∞
		if (selectedElement === 6 || mess === '–†–µ–∫–≤–∏–∑–∏—Ç—ã2' || mess === '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã2') {
			//send photo
			let poster1 = 'https://proj.uley.team/upload/posters/rekviz_nal.jpg' //poster 1

			let arr = [poster1]

			arr.map(async(item, index)=> {
				setTimeout(async()=> {
					await sendPhotoToTelegram({user: user.chatId, photo: item, keyboard: keyboard})

					// setTimeout(async()=> {
                    //     await delMessageToTelegram({user: user.chatId, messageId: sendToTelegram?.data.result.message_id}) 
                    // }, 1200000) //20 –º–∏–Ω.
				}, 500 * ++index)
			})			
		} 
    }

	//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
	const sendMyMessage = async() => {
		console.log("send passport")
		//audio.play();

		let client = userRenthub.filter((client) => client.chatId === user.chatId)[0];

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", web_app: {url: webAppAnketa}},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		let sendToTelegram
		let text = ''
		
		//–ü–∞—Å–ø–æ—Ä—Ç
		if (selectedElement === '1') {
			//send photo
			let anketa = 'https://proj.uley.team/upload/2023-11-10T15:12:36.770Z.png' //poster anketa
			// const url_send_photo = `https://api.telegram.org/bot${token_work}/sendPhoto?chat_id=${user.chatId}&photo=${anketa}&reply_markup=${keyboard}`
			// sendToTelegram = await $host.get(url_send_photo);
			sendToTelegram = await sendPhotoToTelegram({user: user.chatId, image: anketa, keyboard: keyboard})
		} 
		

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∫—É
		let message = {};
			
		message = {
			senderId: chatAdminId, 
			receiverId: user.chatId,
			conversationId: client.conversationId,
			type: "text",
			text: text,
			messageId: sendToTelegram.data.result.message_id,
			buttons: '–°–æ–≥–ª–∞—Å–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
		}
			
		// console.log("message send: ", message);
	
		//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		await newRMessage(message)
	
		//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
		addNewMessage(user.chatId, text, 'text', '–°–æ–≥–ª–∞—Å–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', client.conversationId, sendToTelegram.data.result.message_id);
    }

	//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è –ü—Ä–∞–≤–∏–ª–∞
	const sendMyMessage2 = async() => {
		console.log("send rule")
		//audio.play();

		let client = userRenthub.filter((client) => client.chatId === user.chatId)[0];

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "–ü—Ä–æ—á–∏—Ç–∞–ª –ø—Ä–∞–≤–∏–ª–∞", callback_data:'/accept_rule'},
				],
			]
		});

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
		let sendToTelegram
		let sendPhotoToTelegram

		const text = `üîµ <b>–ü—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</b>

–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –Ω–∞ —Ä–∞–±–æ—Ç—É!

‚úÖ <b>–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:</b>
‚Ä¢ –ù–µ –æ–ø–∞–∑–¥—ã–≤–∞—Ç—å | –ù–µ —Ñ–ª—É–¥–∏—Ç—å
‚Ä¢ –ù–µ –ø–æ–∫–∏–¥–∞—Ç—å —á–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è
‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–∏—è –≤—ã—Ö–æ–¥ –Ω–∞ –ø—Ä–æ–µ–∫—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
‚Ä¢ –§–æ—Ä—Å-–º–∞–∂–æ—Ä ‚Äî –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ —Å–µ–±–µ –∑–∞–º–µ–Ω—É
‚Ä¢ –ù–µ –Ω–∞—à–ª–∏ –∑–∞–º–µ–Ω—É ‚Äî –µ–¥–µ—Ç–µ –Ω–∞ –ø—Ä–æ–µ–∫—Ç –ª–∏—á–Ω–æ
‚Ä¢ –ù–µ–≤—ã—Ö–æ–¥ ‚Äî —Å–∏—Å—Ç–µ–º–∞ –≤–Ω–æ—Å–∏—Ç –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ç–∞–∫—Å–∏ –≤ –Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –∫–æ–º–ø–∞–Ω–∏—è –±–µ—Ä–µ—Ç –Ω–∞ —Å–µ–±—è
‚Ä¢ –í—Å–µ–≥–¥–∞ —Å —Å–æ–±–æ–π:
‚Äî –ü–∞—Å–ø–æ—Ä—Ç
‚Äî –ó–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ / Power Bank
‚Äî –ú–µ—Ä—á [–æ–¥–µ–∂–¥–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∫–æ–º–ø–∞–Ω–∏–∏ | –ø–æ–ª—É—á–∞–µ—Ç–µ –≤ –æ—Ñ–∏—Å–µ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤]
‚Ä¢ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –≤—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É –∑–∞—Ä–∞–Ω–µ–µ
‚Ä¢ –í–µ—Å—Ç–∏ —Å–µ–±—è –∫—É–ª—å—Ç—É—Ä–Ω–æ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑—á–∏–∫–∞
‚Ä¢ –î–æ –≤—ã—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:
https://t.me/ULEY_Office_Bot

‚úÖ <b>–î–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞:</b>
‚Ä¢ –í—ã–π—Ç–∏ –Ω–∞ —Å–≤—è–∑—å –≤ —á–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞ 2 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞
‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å¬ª ‚Äî –Ω–∞–∂–∞—Ç–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –≤—ã –Ω–∞ —Å–≤—è–∑–∏ [–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ]
‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´–í –ø—É—Ç–∏¬ª ‚Äî –Ω–∞–∂–∞—Ç—å –≤ –º–æ–º–µ–Ω—Ç –≤—ã—Ö–æ–¥–∞ –∏–∑ –¥–æ–º–∞
‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞ –º–µ—Å—Ç–µ¬ª ‚Äî –ø–æ—Å–ª–µ –ø—Ä–∏–±—ã—Ç–∏—è –Ω–∞ –∞–¥—Ä–µ—Å
‚Ä¢ –í—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ
‚Ä¢ –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∑–∞–∫–∞–∑—á–∏–∫—É

‚úÖ <b>–ù–∞ –ø—Ä–æ–µ–∫—Ç–µ:</b>
‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞—á–∞–ª —Ä–∞–±–æ—Ç—É¬ª ‚Äî –Ω–∞–∂–∞—Ç—å –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã | –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–Ω–æ–ø–∫–æ–π ¬´–î–∞¬ª
‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´–ó–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç—É¬ª ‚Äî –Ω–∞–∂–∞—Ç—å –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç | –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–Ω–æ–ø–∫–æ–π ¬´–î–∞¬ª
‚Ä¢ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞, –∏–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É: +7(499)500-14-11
‚Ä¢ –í–Ω–∏–º–∞–Ω–∏–µ! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã ‚Äî –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –æ–ø–ª–∞—Ç—É
‚Ä¢ –û–ø–ª–∞—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π`

		//–ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
		let temp=text.replace(/\n/g, '%0A'); //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
		temp = temp.replace(/#/g, '%23'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ—Ç–∫–∏
		temp = temp.replace(/&/g, '%26'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ &
		temp = temp.replace(/\+/g, '%2b'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ +
		temp = temp.replace(/>/g, '%3e'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ >
		temp = temp.replace(/</g, '%3c'); 		 //—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ <
		
		//–ü—Ä–∞–≤–∏–ª–∞
		// const url_send_text = `https://api.telegram.org/bot${token_work}/sendMessage?chat_id=${user.chatId}&parse_mode=html&text=${temp}`	
		// sendToTelegram = await $host.get(url_send_text);
		sendToTelegram = await sendMessageToTelegram({user: user.chatId, text: temp})
		

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∫—É
		let message = {};
			
		message = {
			senderId: chatAdminId, 
			receiverId: user.chatId,
			conversationId: client.conversationId,
			type: "text",
			text: '–°—Ü–µ–Ω–∞—Ä–∏–π "–ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç"',
			isBot: null,
			messageId: sendToTelegram.data.result.message_id,
			buttons: '',
		}
			
	
		//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		await newRMessage(message)
	
		//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
		addNewMessage(user.chatId, '–°—Ü–µ–Ω–∞—Ä–∏–π "–ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç"', 'text', '', client.conversationId, sendToTelegram.data.result.message_id);
    
	}

	//–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è –ü–æ—Å—Ç–µ—Ä
	const sendMyMessagePoster = async() => {
		console.log("send poster")
		//audio.play();

		let client = userRenthub.filter((client) => client.chatId === user.chatId)[0];

		const keyboard = JSON.stringify({
			inline_keyboard: [
				[
					{"text": "–ü—Ä–∏–Ω—è—Ç–æ / –ü–æ–Ω—è—Ç–æ", callback_data:'/poster_accept'},
				],
			]
		});

		let sendToTelegram
		
		//–ü–æ—Å—Ç–µ—Ä
		// const url_send_photo = `https://api.telegram.org/bot${token_work}/sendPhoto?chat_id=${user.chatId}&photo=${poster}&reply_markup=${keyboard}`
		// sendToTelegram = await $host.get(url_send_photo);
		sendToTelegram = await sendPhotoToTelegram({user: user.chatId, image: poster, keyboard: keyboard})
		

		//–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∫—É
		let message = {};
			
		message = {
			senderId: chatAdminId, 
			receiverId: user.chatId,
			conversationId: client.conversationId,
			type: "image",
			text: poster,
			isBot: null,
			messageId: sendToTelegram.data.result.message_id,
			buttons: '',
		}
			
	
		//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		await newRMessage(message)
	
		//—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
		addNewMessage(user.chatId, poster, 'image', '', client.conversationId, sendToTelegram.data.result.message_id);
    
	}

	const clickClearFile = () => {
		console.log("clear file...")
		setClearFile(false)
		
	}

	const onEmojiClick = (emojiObject, event) => {
		console.log(emojiObject)
		setMess(prevInp =>prevInp + emojiObject.emoji);

	};

	return (
		<div className="chat">
			<div className="chat__body">
				<div className="chat__bg"></div>

				<Header
					user={personW}
					userH={user}
					manager={workersAll.filter((item)=> item.chatId === user?.chatId)}
					openProfileSidebar={() => openSidebar(setShowProfileSidebar)}
					openSearchSidebar={() => openSidebar(setShowSearchSidebar)}
					closeSidebar={() => closeSidebar(setShowProfileSidebar)}
					showCloseButton={showCloseButton}
					setClearFile={setClearFile}
					clearFile={clearFile}
					clickClearFile={clickClearFile}
				/>
				<div className="chat__content">
					<Convo lastMsgRef={lastMsgRef} messages={user?.messages} convId={user?.conversationId} />
					<CModal alignment="center" visible={showErrorFile} onClose={() => setShowErrorFile(false)}>
                        <CModalHeader>
                        	<CModalTitle>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</CModalTitle>
                        </CModalHeader>
                        <CModalBody>
                        	...
                        </CModalBody>
                        <CModalFooter>
                        	<CButton color="primary" onClick={() => setShowErrorFile(false)}>–û–ö</CButton>
                        </CModalFooter>
                    </CModal>
					
				</div>
				<div style={{position: 'absolute', bottom: '70px', zIndex: '100'}}>
					<EmojiPicker 
						open={showPicker} 
						theme='dark'
						height={400} 
						width={400} 
						onEmojiClick={onEmojiClick}
					/>
				</div>
				
				<footer className="chat__footer">
				
					<div className="chat__footer-wrapper">
						<button
							className="chat__scroll-btn"
							aria-label="scroll down"
							onClick={scrollToLastMsg}
						>
						<Icon id="downArrow" />
						</button>
						{/* <EmojiTray
							showEmojis={showEmojis}
							mess={mess}
							setMess={setMess}
						/> */}
						{/* <EmojiPicker 
							open={showPicker} 
							theme='dark'
							height={500} 
							width={400} 
							onEmojiClick={onEmojiClick}
						/> */}
						<ChatInput
							showEmojis={showEmojis}
							setShowEmojis={setShowEmojis}
							setShowPicker={setShowPicker}
							showAttach={showAttach}
							setShowAttach={setShowAttach}
							onFileChange={onFileChange}
							mess={mess}
							setMess={setMess}
							submitNewMessage={submitNewMessage}
							setSelectedElement={setSelectedElement}
							chosenEmoji={chosenEmoji}
						/>

						{/* <div className="progessBar" style={{ width: progress, height: '1rem', width: '0%',  backgroundColor: 'rgb(68, 212, 231)', color: 'white',  padding: '2px' }}>
							{progress}
						</div> */}
					</div>		
				</footer>
			</div>
			<ChatSidebar
				heading="–ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è"
				active={showSearchSidebar}
				closeSidebar={() => setShowSearchSidebar(false)}
			>
				<Search />
			</ChatSidebar>

			<ChatSidebarProfile
				// heading="–î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞"
				active={showProfileSidebar}
			>
				<Profile user={user} />
			</ChatSidebarProfile>

		</div>
	);
};

export default Chat;
